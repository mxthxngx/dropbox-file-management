services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: dropbox_db
    ports:
      - "5432:5432"
    networks:
      - dropbox_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d dropbox_db || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    restart: always
    ports:
      - 3001:3001
    networks:
      - dropbox_network
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - S3_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - S3_BUCKET_NAME=dropbox-local-bucket
      - POSTGRES_DB=dropbox_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_started

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3
      - GATEWAY_LISTEN=0.0.0.0:4566
    volumes:
      - "./localstack:/docker-entrypoint-initaws.d"
    networks:
      - dropbox_network

networks:
  dropbox_network:
    external: true

volumes:
  postgres_data: